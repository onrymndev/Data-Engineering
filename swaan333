WITH base_data AS (
    SELECT  
        t1.PARTY_ID,
        t1.DATA_DATE,
        t4.MODEL_SCORE,
        t5.PAST_DUE_COUNT
    FROM 
        DM_CAD.INP_COM_SME_EARLY_DLQ_MODEL_V2 t1
        LEFT JOIN EDW.PDM_CUSTOMER t2 
            ON t1.PARTY_ID = t2.PARTY_ID 
            AND t1.DATA_DATE + 1 = t2.DATA_DATE
        INNER JOIN DM_CAD.OUT_COM_SME_EARLY_DLQ_MODEL_V2 t4 
            ON t1.PARTY_ID = t4.PARTY_ID 
            AND t1.DATA_DATE = t4.DATA_DATE
        LEFT JOIN EDW.PDM_CUSTOMER t5 
            ON t1.PARTY_ID = t5.PARTY_ID 
            AND t5.DATA_DATE BETWEEN t1.DATA_DATE + 30 AND t1.DATA_DATE + 35
    WHERE 
        t2.PAST_DUE_COUNT = 1
),
recursive_filter (PARTY_ID, DATA_DATE, MODEL_SCORE, PAST_DUE_COUNT) AS (
    -- Anchor: first entry per PARTY_ID
    SELECT 
        PARTY_ID,
        DATA_DATE,
        MODEL_SCORE,
        PAST_DUE_COUNT
    FROM (
        SELECT 
            PARTY_ID,
            DATA_DATE,
            MODEL_SCORE,
            PAST_DUE_COUNT,
            ROW_NUMBER() OVER (PARTITION BY PARTY_ID ORDER BY DATA_DATE) AS rn
        FROM base_data
    )
    WHERE rn = 1

    UNION ALL

    -- Recursive: next record at least 30 days later
    SELECT 
        b.PARTY_ID,
        b.DATA_DATE,
        b.MODEL_SCORE,
        b.PAST_DUE_COUNT
    FROM recursive_filter rf
    JOIN base_data b
        ON b.PARTY_ID = rf.PARTY_ID
        AND b.DATA_DATE > rf.DATA_DATE + 30
    WHERE NOT EXISTS (
        SELECT 1 
        FROM base_data bx
        WHERE bx.PARTY_ID = rf.PARTY_ID
          AND bx.DATA_DATE > rf.DATA_DATE
          AND bx.DATA_DATE <= rf.DATA_DATE + 30
    )
)
SELECT 
    PARTY_ID,
    DATA_DATE,
    MODEL_SCORE,
    PAST_DUE_COUNT AS PDC_30
FROM recursive_filter
ORDER BY PARTY_ID, DATA_DATE;