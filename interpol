import pandas as pd
import numpy as np

# ---- STEP 1: Load your data ----
# Assuming you already have a DataFrame `df` with datetime index and columns like '1g', '2g', ..., '5y'

# Example:
# df = pd.read_csv("your_data.csv", index_col=0, parse_dates=True)

# ---- STEP 2: Convert tenor columns to actual time offsets ----
def tenor_to_offset(tenor):
    num = int(''.join(filter(str.isdigit, tenor)))
    unit = ''.join(filter(str.isalpha, tenor))
    if unit == 'g':  # gün (day)
        return pd.Timedelta(days=num)
    elif unit == 'a':  # ay (month)
        return pd.DateOffset(months=num)
    elif unit == 'y':  # yıl (year)
        return pd.DateOffset(years=num)
    else:
        raise ValueError(f"Unknown tenor: {tenor}")

# Mapping tenor names to offsets
tenor_offsets = {col: tenor_to_offset(col) for col in df.columns}

# ---- STEP 3: Interpolate daily interest rates for 5 years ----
from tqdm import tqdm

# Define 5-year date range length (including leap year): 365 * 5 + 1 = 1826 days
n_days = 1826

# Prepare result container
daily_dates = [f'day_{i}' for i in range(n_days)]  # column names
interpolated_data = []

for idx, row in tqdm(df.iterrows(), total=len(df)):
    start_date = idx
    
    # Calculate future tenor dates from this start date
    tenor_dates = []
    for col in df.columns:
        offset = tenor_offsets[col]
        date = start_date + offset if isinstance(offset, pd.Timedelta) else offset.apply(start_date)
        tenor_dates.append(date)

    # Create a pandas Series from known tenor dates
    known_series = pd.Series(data=row.values.astype(float), index=pd.to_datetime(tenor_dates)).sort_index()
    
    # Create full range of future daily dates (5 years)
    future_dates = pd.date_range(start=start_date, periods=n_days, freq='D')
    
    # Interpolate linearly over the combined index
    full_index = known_series.index.union(future_dates).sort_values()
    interpolated_series = known_series.reindex(full_index).interpolate(method='time')
    
    # Select only the daily interpolated values
    daily_values = interpolated_series.loc[future_dates].values
    interpolated_data.append(daily_values)

# ---- STEP 4: Create the final interpolated DataFrame ----
interpolated_df = pd.DataFrame(interpolated_data, index=df.index, columns=daily_dates)

# ---- OPTIONAL: Save to CSV ----
# interpolated_df.to_csv("interpolated_interest_rates.csv")

# Show result
print(interpolated_df.head())